@using CustomEditorEF.Module.BusinessObjects;
@using Microsoft.AspNetCore.Components.Web

@if (Data is not null) {
    <div class="row">
        @foreach (var item in Data) {
            <DxCheckBox Checked="@selectedItems.Contains(item)"
                        CssClass="col-auto"
                        CheckedChanged="@(async (bool isSelected) => await SelectItem(item, isSelected))">
                <div style="cursor: pointer;" @onclick=@(async () => await ItemClick.InvokeAsync(item))>
                    @if (item.Image is null) {
                        <div class="border d-flex justify-content-center align-items-center"
                             style="height:150px; width: 104px;">
                            No image
                        </div>
                    }
                    else {
                        <img src="data:image/png;base64,@Convert.ToBase64String(item.Image)" alt=@item.Text
                             style="height:150px; width: 104px;">
                    }
                    <div class="text-center" style="width: 104px;">
                        @item.Text
                    </div>
                </div>
            </DxCheckBox>
        }
    </div>
}

@code {
    [Parameter]
    public IEnumerable<IPictureItem> Data { get; set; }
    [Parameter]
    public EventCallback<IPictureItem> ItemClick { get; set; }
    [Parameter]
    public EventCallback<IEnumerable<IPictureItem>> SelectionChanged { get; set; }
    private List<IPictureItem> selectedItems = new();

    protected override async Task OnParametersSetAsync() {
        await base.OnParametersSetAsync();
        var newSelectedItems = new List<IPictureItem>();
        if (Data is not null) {
            foreach (var item in Data) {
                if (selectedItems.Contains(item)) {
                    newSelectedItems.Add(item);
                }
            }
        }
        if (!newSelectedItems.SequenceEqual(selectedItems)) {
            await SelectionChanged.InvokeAsync(newSelectedItems);
        }
        selectedItems = newSelectedItems;
    }
    private async Task SelectItem(IPictureItem item, bool isSelected) {
        if (isSelected) {
            selectedItems.Add(item);
        }
        else {
            selectedItems.Remove(item);
        }
        await SelectionChanged.InvokeAsync(selectedItems);
    }
}